class Solution {
public:
    
    void backtrack(set<vector<int>>&ans, vector<int>&curr, vector<int>&nums,int index)
    {
        
        if(curr.size()>=2)
        {
        ans.insert(curr);
        }
        
        for(int i=index;i<nums.size();i++)
        {
             int n=curr.size();
            if(curr.size()==0 || curr[n-1]<=nums[i] )
            
                {
                curr.push_back(nums[i]);
                backtrack(ans,curr,nums,i+1);
                curr.pop_back();
                }
        }
        return ;
    }
    
    
    
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        
        set<vector<int>>ans;
         
        vector<int>curr;
        backtrack(ans,curr,nums,0);
        
        vector<vector<int>>a;
        for(auto s:ans)
        {
          
                a.push_back(s);
          
        }
        
        
        
        return a;
        
    }
};
