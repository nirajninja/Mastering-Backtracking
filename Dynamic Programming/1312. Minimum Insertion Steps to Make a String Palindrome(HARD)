class Solution {
public:
    
    int lcs(string s1, string s2)
    {
        int n=s1.size();
        //int n=s2.size();
        int dp[n+1][n+1];
        for(int i=0;i<n+1;i++)
        {
            for(int j=0;j<n+1;j++)
            {
                if(i==0 || j==0)
                {
                    dp[i][j]=0;
                }
                else if(s1[i-1] == s2[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=max(dp[i][j-1], dp[i-1][j]);
                }
            }
        }
        return dp[n][n];
    }
    
    int minInsertions(string s) {
        
        string s2=s;
        reverse(s2.begin(),s2.end());
        cout<<s2<<endl;
        int n=lcs(s,s2);
        
        cout<<n<<endl;
        return s.size()-n;
    }
};


//sahi question h, lcs se hi hogya, minimum insertion=minimum deletion
